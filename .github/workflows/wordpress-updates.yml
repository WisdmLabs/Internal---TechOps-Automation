name: WordPress Updates Automation

on:
  schedule:
    - cron: "0 0 1 * *"  # Run at midnight on the first day of every month
  workflow_dispatch:
    inputs:
      schedule_day:
        description: 'Day of month to run (1-31)'
        required: false
        type: number
        default: 1
      schedule_time:
        description: 'Time to run (HH:MM)'
        required: false
        type: string
        default: '00:00'
      timezone:
        description: 'Timezone for scheduling'
        required: false
        type: choice
        options:
          - 'Asia/Kolkata'
          - 'UTC'
          - 'America/New_York'
          - 'Europe/London'
        default: 'Asia/Kolkata'
      update_type:
        description: 'Type of updates to process'
        required: true
        type: choice
        options:
          - 'all'
          - 'plugins'
          - 'themes'
        default: 'all'

jobs:
  configure-schedule:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Update Schedule Configuration
        uses: actions/github-script@v6
        with:
          script: |
            const day = ${{ github.event.inputs.schedule_day }};
            const time = ${{ github.event.inputs.schedule_time }};
            const [hours, minutes] = time.split(':');
            const cron = `${minutes} ${hours} ${day} * *`;
            
            await github.rest.actions.createOrUpdateRepoVariable({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'UPDATE_CHECK_CRON',
              value: cron
            });
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'Schedule Configuration Updated',
              body: `Schedule has been updated:\n- Day: ${day}\n- Time: ${time}\n- Timezone: ${{ github.event.inputs.timezone }}\n- Cron: ${cron}`
            });

  check-and-update:
    needs: configure-schedule
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Check for updates
        id: check-updates
        run: node scripts/check-updates.js
        env:
          LIVE_SITE_URL: ${{ secrets.LIVE_SITE_URL }}
          LIVE_SITE_AUTH_TOKEN: ${{ secrets.LIVE_SITE_AUTH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          UPDATE_TYPE: ${{ github.event.inputs.update_type || 'all' }}
          TIMEZONE: ${{ github.event.inputs.timezone || 'Asia/Kolkata' }}
          
      - name: Create backup
        if: success() && hashFiles('updates.json')
        run: |
          BACKUP_DIR="_backups/$(date +%Y%m%d-%H%M%S)"
          mkdir -p $BACKUP_DIR
          cp -r wp-content/* $BACKUP_DIR/
          echo "Created backup in $BACKUP_DIR"
          
      - name: Download plugin updates
        if: success() && hashFiles('updates.json') && (env.UPDATE_TYPE == 'all' || env.UPDATE_TYPE == 'plugins')
        run: node scripts/utils/update-downloader.js plugins
        env:
          LIVE_SITE_URL: ${{ secrets.LIVE_SITE_URL }}
          LIVE_SITE_AUTH_TOKEN: ${{ secrets.LIVE_SITE_AUTH_TOKEN }}
          
      - name: Download theme updates
        if: success() && hashFiles('updates.json') && (env.UPDATE_TYPE == 'all' || env.UPDATE_TYPE == 'themes')
        run: node scripts/utils/update-downloader.js themes
        env:
          LIVE_SITE_URL: ${{ secrets.LIVE_SITE_URL }}
          LIVE_SITE_AUTH_TOKEN: ${{ secrets.LIVE_SITE_AUTH_TOKEN }}
          
      - name: Process plugin updates
        if: success() && hashFiles('updates.json') && (env.UPDATE_TYPE == 'all' || env.UPDATE_TYPE == 'plugins')
        run: |
          # Read updates.json and extract plugin information
          PLUGINS=$(node -e "const updates = require('./updates.json'); console.log(JSON.stringify(Object.entries(updates.plugins).map(([slug, info]) => ({ slug, active: true }))))")
          echo "$PLUGINS" | node scripts/process-plugins.js
        env:
          LIVE_SITE_URL: ${{ secrets.LIVE_SITE_URL }}
          LIVE_SITE_AUTH_TOKEN: ${{ secrets.LIVE_SITE_AUTH_TOKEN }}
          
      - name: Process theme updates
        if: success() && hashFiles('updates.json') && (env.UPDATE_TYPE == 'all' || env.UPDATE_TYPE == 'themes')
        run: |
          # Read updates.json and extract theme information
          THEMES=$(node -e "const updates = require('./updates.json'); console.log(JSON.stringify(Object.entries(updates.themes).map(([slug, info]) => ({ slug, active: true }))))")
          echo "$THEMES" | node scripts/process-themes.js
        env:
          LIVE_SITE_URL: ${{ secrets.LIVE_SITE_URL }}
          LIVE_SITE_AUTH_TOKEN: ${{ secrets.LIVE_SITE_AUTH_TOKEN }}
          
      - name: Update versions file
        if: success() && hashFiles('updates.json')
        run: node scripts/utils/version-updater.js
        env:
          LIVE_SITE_URL: ${{ secrets.LIVE_SITE_URL }}
          LIVE_SITE_AUTH_TOKEN: ${{ secrets.LIVE_SITE_AUTH_TOKEN }}
          
      - name: Commit and push changes
        if: success() && hashFiles('updates.json')
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add .
          git commit -m "Update WordPress plugins and themes [skip ci]"
          git push 