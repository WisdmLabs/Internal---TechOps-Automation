name: Check WordPress Updates

on:
  schedule:
    # Run at 00:00 on the 1st of every month
    - cron: '0 0 1 * *'
  workflow_dispatch:
    inputs:
      schedule_day:
        description: 'Day of the month to run (1-31)'
        required: false
        default: '1'
      schedule_time:
        description: 'Time to run (HH:MM)'
        required: false
        default: '00:00'
      timezone:
        description: 'Timezone for the schedule'
        required: false
        default: 'UTC'
      check_type:
        description: 'Type of updates to check'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - plugins
          - themes

jobs:
  check-updates:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Check for updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          STAGING_SITE_URL: ${{ vars.STAGING_SITE_URL }}
          STAGING_SITE_AUTH_TOKEN: ${{ secrets.STAGING_SITE_AUTH_TOKEN }}
          CHECK_TYPE: ${{ github.event.inputs.check_type || 'all' }}
        run: |
          # Run the update check and capture output
          node scripts/check-updates.js | tee update_report.txt
          
          # Print the report in workflow
          echo "Update Check Report:"
          cat update_report.txt

      - name: Create Pull Request
        if: success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the current date for PR title
          DATE=$(date +'%Y-%m-%d')
          
          # Check if there are any changes
          if [[ -n "$(git status --porcelain)" ]]; then
            # Configure Git
            git config --global user.name 'GitHub Actions'
            git config --global user.email 'actions@github.com'
            
            # Create a new branch for the changes
            BRANCH_NAME="wordpress-updates-${DATE}"
            git checkout -b $BRANCH_NAME
            
            # Commit changes
            git add .
            git commit -m "feat: WordPress updates check - ${DATE}"
            
            # Push changes
            git push origin $BRANCH_NAME
            
            # Create PR using GitHub CLI
            gh pr create \
              --base main \
              --head $BRANCH_NAME \
              --title "WordPress Updates Check - ${DATE}" \
              --body "This PR contains WordPress updates detected by the automated check on ${DATE}. Please review the changes and merge if appropriate."
          else
            echo "No changes detected. Skipping PR creation."
          fi

      - name: Handle PR Creation Failure
        if: failure()
        run: |
          echo "Failed to create PR. Please check the workflow logs for more details." 