name: WordPress Content Sync
# This workflow downloads WordPress content to main branch and creates a PR to release branch
on:
  workflow_dispatch:
    inputs:
      live_site_url:
        description: 'Live Site URL'
        required: true
        default: 'https://wordpress-1000690-5314661.cloudwaysapps.com'
      staging_site_url:
        description: 'Staging Site URL'
        required: true
        default: 'https://techopsautomation.wisdmlabs.net'

permissions:
  contents: write
  pull-requests: write
  actions: write # Added permission for updating repository variables

jobs:
  sync-content:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          token: ${{ secrets.TOKEN_FOR_TECHOPS_AUTOMATION }}
          path: . # This ensures the repo is checked out in the current directory
      
      - name: Update Repository Variables
        run: |
          # Update LIVE_SITE_URL variable
          curl -X PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.TOKEN_FOR_TECHOPS_AUTOMATION }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/LIVE_SITE_URL \
            -d "{\"name\":\"LIVE_SITE_URL\",\"value\":\"${{ github.event.inputs.live_site_url }}\"}"
          
          # Update STAGING_SITE_URL variable
          curl -X PATCH \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.TOKEN_FOR_TECHOPS_AUTOMATION }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/STAGING_SITE_URL \
            -d "{\"name\":\"STAGING_SITE_URL\",\"value\":\"${{ github.event.inputs.staging_site_url }}\"}"
          
          echo "✅ Repository variables updated with current workflow inputs"
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm install
        
      - name: Create directory structure
        run: |
          mkdir -p wp-content/plugins
          mkdir -p wp-content/themes
          
      - name: Make scripts executable
        run: chmod +x scripts/*.sh
        
      - name: Test API Authentication
        run: |
          echo "Testing API authentication for live site..."
          LIVE_RESPONSE=$(curl -i -H "Authorization: Basic ${{ secrets.LIVE_SITE_AUTH_TOKEN }}" \
            ${{ github.event.inputs.live_site_url }}/wp-json/techops/v1/plugins/list)
          LIVE_STATUS=$(echo "$LIVE_RESPONSE" | grep "HTTP/" | awk '{print $2}')
          echo "Live site response status: $LIVE_STATUS"
          
          if [[ "$LIVE_STATUS" != "200" ]]; then
            echo "❌ Live site authentication failed with status $LIVE_STATUS"
            echo "Response: $LIVE_RESPONSE"
            exit 1
          fi
          
          echo "Testing API authentication for staging site..."
          STAGING_RESPONSE=$(curl -i -H "Authorization: Basic ${{ secrets.STAGING_SITE_AUTH_TOKEN }}" \
            ${{ github.event.inputs.staging_site_url }}/wp-json/techops/v1/plugins/list)
          STAGING_STATUS=$(echo "$STAGING_RESPONSE" | grep "HTTP/" | awk '{print $2}')
          echo "Staging site response status: $STAGING_STATUS"
          
          if [[ "$STAGING_STATUS" != "200" ]]; then
            echo "❌ Staging site authentication failed with status $STAGING_STATUS"
            echo "Response: $STAGING_RESPONSE"
            exit 1
          fi
          
          echo "✅ Authentication successful for both sites"

      - name: Check and Switch to Main Branch
        run: |
          CURRENT_BRANCH=$(git branch --show-current)
          echo "Current branch: $CURRENT_BRANCH"
          
          if [[ "$CURRENT_BRANCH" != "main" ]]; then
            echo "Not on main branch. Switching to main branch..."
            git checkout main
            git pull origin main
            echo "✅ Successfully switched to main branch"
          else
            echo "Already on main branch"
          fi
          
          # Verify we are on main branch
          CURRENT_BRANCH=$(git branch --show-current)
          if [[ "$CURRENT_BRANCH" != "main" ]]; then
            echo "❌ Failed to switch to main branch"
            exit 1
          fi
          
          echo "✅ Confirmed we are on main branch: $CURRENT_BRANCH"
            
      - name: Download Content
        env:
          LIVE_SITE_URL: ${{ github.event.inputs.live_site_url }}
          LIVE_SITE_AUTH_TOKEN: ${{ secrets.LIVE_SITE_AUTH_TOKEN }}
          STAGING_SITE_URL: ${{ github.event.inputs.staging_site_url }}
          STAGING_SITE_AUTH_TOKEN: ${{ secrets.STAGING_SITE_AUTH_TOKEN }}
        run: |
          echo "Starting content download..."
          ./scripts/download-content.sh
          echo "Content download completed."

      - name: Debug Git Status
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Git status:"
          git status
          echo "Changed files:"
          git diff --name-status

      - name: Check for changes
        id: check-changes
        run: |
          if [[ -n "$(git status --porcelain)" ]]; then
            echo "CHANGES_FOUND=true" >> $GITHUB_ENV
            echo "Changes found in the repository"
            # Generate a unique branch name using timestamp
            echo "SYNC_BRANCH=sync-wordpress-content-$(date +%Y%m%d-%H%M%S)" >> $GITHUB_ENV
          else
            echo "CHANGES_FOUND=false" >> $GITHUB_ENV
            echo "No changes found in the repository"
          fi
        
      - name: Create Pull Request to Main
        id: create-pr
        if: env.CHANGES_FOUND == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.TOKEN_FOR_TECHOPS_AUTOMATION }}
          base: main
          branch: ${{ env.SYNC_BRANCH }}
          title: "Sync WordPress Content from Live Site"
          body: |
            This PR syncs the latest WordPress content changes from live site to main branch.
            
            Changes include:
            - Updated plugins
            - Updated themes
            
            Note: After merging this PR, the activation sync workflow will automatically run.
          delete-branch: false

      - name: Retry PR Creation if Failed
        if: env.CHANGES_FOUND == 'true' && steps.create-pr.outcome != 'success'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOKEN_FOR_TECHOPS_AUTOMATION }}
          script: |
            const maxRetries = 3;
            const baseDelay = 5000; // 5 seconds
            
            for (let attempt = 1; attempt <= maxRetries; attempt++) {
              try {
                const pr = await github.rest.pulls.create({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  title: 'Sync WordPress Content from Live Site',
                  head: '${{ env.SYNC_BRANCH }}',
                  base: 'main',
                  body: `This PR syncs the latest WordPress content changes from live site to release branch.
                  
                  Changes include:
                  - Updated plugins
                  - Updated themes
                  
                  Note: After merging this PR, the activation sync workflow will automatically run.`
                });
                console.log(`✅ PR created successfully on attempt ${attempt}`);
                break;
              } catch (error) {
                if (attempt === maxRetries) {
                  console.error('Failed to create PR after all retries');
                  throw error;
                }
                const delay = baseDelay * Math.pow(2, attempt - 1);
                console.log(`Attempt ${attempt} failed, retrying in ${delay}ms...`);
                await new Promise(resolve => setTimeout(resolve, delay));
              }
            }

      - name: PR Creation Debug
        if: always()
        run: |
          echo "PR Creation Status: ${{ steps.create-pr.outcome }}"
          echo "PR Number: ${{ steps.create-pr.outputs.pull-request-number }}"
          echo "PR URL: ${{ steps.create-pr.outputs.pull-request-url }}"
          echo "Sync Branch: ${{ env.SYNC_BRANCH }}" 
          echo "Checking branch status after PR creation..."
          git fetch --all
          echo "Remote branches:"
          git branch -r
          echo "Local branches:"
          git branch
          echo "Branch ${{ env.SYNC_BRANCH }} commit:"
          git log -1 ${{ env.SYNC_BRANCH }}
          echo "Main branch commit:"
          git log -1 main
          echo "Release branch commit:"
          git log -1 origin/release